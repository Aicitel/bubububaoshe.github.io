当前进度：
未完成：特殊牌选择/存储
1. 存储内容：
[玩家的特殊牌库] USER_SPECIAL_REPO : qqxspecials
[玩家的上轮特殊牌选择] PLAYER_SPECIALS[1] : qqxspecialpicks
不存储的内容：
对方的特殊牌库和特殊牌选择
对方为AI时，根据设置和玩家的选择随机选择正确的特殊牌

2. 特殊牌选择原则：
[同一玩家不可选择同名特殊牌]
[不同玩家可选择同名特殊牌]
[不同玩家可选择同id特殊牌]
也就是说玩家选择特殊牌是独立的
AI特殊牌处理：
根据设置随机产生AI特殊牌
算简化的处理，但我也很想做成三国杀3v3选将那样啊。。。
那么目前来说，让玩家选择自己的特殊牌就好了。

[记得处理的小问题：infobanner gradient not working on ios safari]

当前进度：
完成：[特殊牌][程序逻辑整理]
未完成：[卡牌信息][特殊牌发放][特殊牌存储][特殊牌选择]


先做1.主界面
卡牌信息先做吧：
3个可能位置：
考虑到可能重用，每个部分都搞一个function生成对应的div
1. 主界面(done)
  hand1, pool, hand0.faceup
	右侧 hoverinfobox 那个位置
	显示内容：[名字:基础分]/[可形成组合的卡牌](即使是特殊牌也只显示这些)
2. 特殊牌仓库界面
  左侧整条
	显示内容：[名字*后缀]/[角色尬诗]/[技能]*n
3. 明牌堆界面
  右侧整条
	显示内容：
	  特殊牌：同上
		普通牌：[名字]/[角色尬诗]/[可组队卡牌] (然而普通牌的角色尬诗我没录。。。)

附加：
  明牌界面：
	  已禁用卡牌黑化（disabled, swapped&noswap）
		已失效技能标注（disabled）

尽量用hover/active完成，不要再listener了。。。


特殊牌：
id：普通角色名首字母+游戏代数+字母
	e.g.,如果存在3张沈夜特殊牌，则分别为sy2a,sy2b,sy2c

假设：
1.swaptrick, copytrick交换后必然无效。（否则可能死循环）
这两个技能自带交换后无效技能
1.1 swaptrick没有除“交换后无效”之外的其它功能
2.copytrick,unnamedbantrick只触发一次。（即使在触发时无可作用对象）
2.1 但namedbantrick永远锁定对方XDD
3.copytrick不能copy copytrick哈哈。


哈哈哈错了，copy才应该是最早用的，因为copy可能引发其他任何技能。给除copy以外的技能搞一个clone吧。
obtain整体流程
preObtain: copy?/swap? (一旦引发从头preobtain)

inObtain:
model.obtain
(次序分先后因为这里被ban是namedban不会引发reveal了)
ban
user reveal?(flip card)
view.obtain: actions, combos

postObtain:
deal
end or next obtain

(info banner disappear upon user clicks)

当前进度：
[基本完成特殊牌功能][未实现复制特殊牌和禁用]
来做禁用[BanTrick]！跟SwapTrick差不多啦！跟CopyTrick更像~
BanTrick：
禁用对象仅限对方已入手的珍稀牌
可禁用的技能：ComboTrick, CharTrick
不可禁用的技能：RevealTrick, DealTrick, SwapTrick, NoswapTrick(noswap = true)

两类：
[a]无指定对象：理解为可以选定禁用角色，理解为只在第一次入手时触发（交换重新入手不触发）
获得后[addTableChar完成后]后触发，选择禁用对象（如有），最终会导致对方recalculate。禁用对方后禁用自己的这个技能。
处理序列：model.obtain -> controller.selectBan -> model.banChar -> player.recalculate
[b]指定对象：理解为只禁用对方角色
对方获得对应卡牌时触发，获得时即禁用，不会导致recalculate
处理序列：player.addChar -> char.disable (意外的简单)

-由于两种机制完全不一样，所以实现为两个Class: UnnamedBanTrick, NamedBanTrick(name)
-卡牌列表里需要加入新的状态：已禁用
禁用的两种可能：
-[交换后技能无效]的角色被交换
-被BanTrick禁用

CopyTrick:
就算它可以选定禁用角色吧,全技能可复制。

测试角色：艄公，

------------------------------------------
-基本数据结构
-嵌入游戏
-完善数据结构
-技能处理
-存取卡牌信息
-扩展技能
技能实现序列：
[翻牌][影响发牌][组合加分][友方角色加分][换牌][换牌后无效]
未实现：
[禁用][复制]

特殊牌库：全局
玩家特殊牌：cookie存储
----------------------------------------------------------------------
* 一阶段支持的技能种类：
[计分作用类]
组合加分
卡牌加分
[即时作用类]
翻牌
影响发牌
* 二阶段支持的技能种类：
交换牌、交换后技能无效
* 暂不支持的技能种类：
禁用珍稀牌（游戏里看起来没实现嘛）
----------------------------------------------------------------------
沈夜*紫微 : sy2a
天命难解此中局，神血护佑心魔曲。
4分
1. 下一回合一定出现一个流月城角色
2. 随机翻开对手手牌两张
----------------------------------------------------------------------
悭臾*水虺 : qy1a
榣山水湄遇长琴，通天彻地为知音。
4分
1. 自身能组成的组合每个增加10分
2. 随机翻开对手手牌一张
----------------------------------------------------------------------
百里屠苏*黑猫 : blts1b
眼底无故人，世事冷如铁。谁与长相约，眉间刺新血。
6分
1.若古剑焚寂在公共卡池中，则下一回合一定出现古剑焚寂。
2.桃花幻梦的分数增加30分。
----------------------------------------------------------------------
风晴雪*凤曦 : fqx1a
好向寒节报花信，春风一脉动幽都。
4分
1. 百里屠苏的分数增加15分。
----------------------------------------------------------------------
闻人羽*天罡 : wry2b
天罡夜枕绿沉枪，\n敌血尚温金甲凉。
6分
1.蓝衫偃师记 + 30
2.被交换后卡牌技能无效。
----------------------------------------------------------------------
乐无异*偃师 : ywy2b
金刚力士舞灵木，\n墨意非攻定乾坤。
6分
1.随机翻开对手手牌三张
2.被交换后卡牌技能无效。
----------------------------------------------------------------------
夏夷则*太华 : xyz2a
江山倦夜眠孤客，\n红堕沾衣冷血痕。
4分
1.蓝衫偃师记 + 20
----------------------------------------------------------------------
沈曦*魔化 : sx2a
稚童新衫犹未裁，\n一点红痕一世哀。
4分
1. 翻牌 2
----------------------------------------------------------------------
谢衣*初七 ： xy2a
霜刃初试驱长夜，\n破云开天相决绝。
4分
1. 烈山遗族 + 20
2. 翻牌 1
----------------------------------------------------------------------
陵越*掌门 ： ly1a
任侠为道守仙门，\n见素抱朴未忘沉。
4分
1. 交换对方任意一张牌。
2. 被交换后卡牌技能无效。
----------------------------------------------------------------------
华月*魔化 ： hy2a
戾天狂歌琴声啸，\n朔雪为刃止喧嚣。
4分
1. 交换对方任意一张牌。
2. 被交换后卡牌技能无效。
----------------------------------------------------------------------
欧阳少恭*蓬莱 ： oysg1a
偏有漏长惊永夜，\n梦魂又觉第几生。
4分
1. 禁用对方任意一张珍稀牌的技能
2. 芳华如梦 + 20
----------------------------------------------------------------------
夏夷则*鲛人 ： xyz2b
沧海遗珠鲛人泪，\n遗骨托生帝王脉。
6分
1. 禁用对方任意一张珍稀牌的技能
2. 随机翻开对手手牌2张
----------------------------------------------------------------------
清和真人*温留 ： qhzr2a
赤血丹心照夙昔，\n殊途与归执道心。
4分
1. 禁止夏夷则珍稀牌的技能
2. 温茶相待的分数增加30分
----------------------------------------------------------------------
红玉*道服 : hy1a
霜雪凝精神，\n桃花铸肌骨。\n还报一寸心，\n愿同尘与土。
4分
1. 复制对方任意一张珍稀牌的技能
2. 被交换后卡牌技能无效
----------------------------------------------------------------------
乐无异*捐毒 : ywy2a
长安年少重游侠，\n抱酒弹铗杏花阴。
4分
1. 复制对方任意一张珍稀牌的技能
2. 被交换后卡牌技能无效

﻿不明觉厉的CSS Transition：
在js里调用clientWidth一定能触发transition(据说会令css reflow，有资源消耗)

游戏规则：
初始：
[选择特殊卡]
手牌10，卡池8
每人每轮：
	重新洗牌直到任一季节卡牌小于5张
	[a]判断是否可选：可选跳转[b];不可选跳转[c]
	+[b]可选：
		选牌，手牌-1，卡池-1
		卡池补牌，卡池+1
		结果：手牌-1， 卡池不变
	+判断：手牌>0跳转[a],手牌为0，结束跳转[e]
	+[c]不可选：
	+判断：卡池<=9跳转[d],卡池=10，卡池重组：卡池8，跳转[a]
	+[d]选牌入卡池，手牌-1，卡池+1
		手牌补牌，手牌+1
		结果：手牌不变，卡池+1，跳转[a]
[e]结束：计分


---------------------------------------

重构轻量级服务器计划
1 开局、选牌
2 非珍稀牌事件（洗牌等等）
  每添加一件新事件时修改之处亦是跟随消息的流向：
    a) 从当前玩家 -> 服务器 的 程序，通常是把card中的递归结构去掉，只留牌的ID
	b) 服务器端收消息，进行最小的必要的状态记录，并发给另一玩家
	c) 另一玩家收到后的处理
3 珍稀牌事件
    这里可能比之前要更复杂一些
4 然后完成重新开局事件
5 玩家掉线后由AI接管？

现在在步骤2

---------------------------------------

对战时间轴

（双方匹配阶段）

1. 玩家 ----> 服务器  'connect' 表示登陆；服务器会记下该玩家
2. 玩家 <---- 服务器  'Info_OnlinePlayerCount' 附带当前人数
                      'Info_MyPlayerId' 附带该玩家的ID（用于指定ID组人）
（2 可以接 3 或是接 5，看是想指定人组队还是随机组队）

3. 玩家1 ---> 服务器  'Match_ReadyToMatch' 表示开始匹配
   玩家1 <--- 服务器  'Match_ReadyToMatchAck'，提示玩家等待匹配
                                               服务器这时会寻找同样开始匹配了的玩家
   玩家1&2 <- 服务器  'Match_FoundMatch' 如果找到了的话就给两个玩家都传回这个
（3 接 4 或者当任一玩家取消匹配时，通知双方取消匹配，回到第 3 步开头）

4. 玩家1 ---> 服务器  'Match_ConfirmMatch' 表示确定匹配。谁先确定谁就是先手，不过也可以交换。
   玩家2 <--- 服务器  'Match_OtherPlayerConfirmed' 服务器会通知玩家2按确定
   玩家2 ---> 服务器  'Match_ConfirmMatch'
   玩家1&2 <- 服务器  'Match_GameSetupDefensive' 传给后手玩家
                      'Match_GameSetupOffensive' 传给先手玩家

                      +----------------------------------------------------------+
                      |                             B                            |
       +--------------+----------------------------------------------------------+
 	   |A如何称呼B？  |                     服务器    服务器    自己      自己   |
 	   |              |   先手      后手    眼中的    眼中的    眼中的    眼中的 |
	   |              |                     自己      对方      自己      对方   |
       +-------------------------------------------------------------------------+
 	   |   |    先手  | player1   player0   player1   player0   player1   player0|
 	   | A |    后手  | player0   player1   player0   player1   player1   player0|
 	   |   |  服务器  | player1   player0    N/A       N/A       N/A       N/A   |
       +-------------------------------------------------------------------------+
	   
   玩家侧的程序中以rank表示先后手（也就是服务器看玩家的编号），1为先手，0为后手。

5. 玩家1 ---> 服务器 'Match_InvitePlayer' 带欲组队的玩家ID
                |
				|   服务器会找一找有没有这个玩家
   玩家1&2 <----+   'Match_FoundMatch' 如果找到了的话就跳到4，视为“找到了匹配”
   玩家1 <------+   'Match_InvalidInvitation' 如果没找到就告知此ID对应的玩家不存在
   
（双方选择特殊牌阶段）

6. 先手玩家 ---> 服务器 'Match_SetupComplete' 带选好的特殊牌和发牌结果（先手玩家调用model.setup()，但是略过对方的特殊牌的view的初始化部分，后手先不调用）
   后手玩家 ---> 服务器 'Match_SetupComplete' 带选好的特殊牌
               
   当两名玩家都选好之后

   先手玩家 <--- 服务器 'Match_GameInitOffensive' 带后手玩家所选的特殊牌
                   |                              此时先手玩家要补全对方的特殊牌初始化部分，fixup
   后手玩家 <------'    'Match_GameInitDefensive' 带先手玩家所选的特殊牌和发牌结果(snapshot)
                                                  此时后手玩家再调用与model.setup()相当的部分，但是用snapshot代替Deck.removeRandom()
												  然后后手玩家再调用对方的特殊牌的view的初始化部分，fixup

（每一回合的过程）

7. 若需洗牌redeal或换一张牌discard，则转8，否则转9

8. 当前玩家 ---> 服务器 'Game_Redeal' 洗牌，带洗牌结果（如果需要重新洗牌的话）
   另一玩家 <------'    'Game_Redeal' 服务器告知另一名玩家洗牌的结果

9. 当前玩家进行 controller.obtain()
   当前玩家 ---> 服务器 'Game_Obtain' 取一对牌，带所取的牌的ID（不能传Card对象，因为其是递归数据结构）
   有可能转10
   
10. 当前玩家进行 controller.handleCopies()

11. 当前玩家进行 controller.handleSwaps()

12. 当前玩家进行 model.obtain()

13. 当前玩家进行 controller.handleBans()

14. 当前玩家执行 controller.handleReveals()

---------------------------------------
